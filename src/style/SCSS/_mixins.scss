@use './color';
@use "sass:list";
@use "sass:meta";
// animations
@mixin smoothAppearanceAni {
  animation: ani 2.5s forwards;
  @keyframes ani {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
}

@mixin authLinkAni() {
  animation: pulsate 5s linear infinite;
  @keyframes pulsate {
    50% {
      text-shadow: 0 0 2px color.$authLinkAni;
    }
  }
}

@mixin authBgAnimation() {
  animation: animate 25s linear infinite;
  @keyframes animate {
    0% {
      transform: translateY(0) rotate(0deg);
      opacity: 1;
      border-radius: 0;
    }
    100% {
      transform: translateY(-1000px) rotate(720deg);
      opacity: 0;
      border-radius: 50%;
    }
  }
}
@mixin jumpingWords($animation-delay,$animationTimer:3s,$font-size:40px) {
  animation: jumpingSwordAni $animationTimer infinite;
  animation-delay: $animation-delay;
  @keyframes jumpingSwordAni {
    0%,40%,100% {
      transform: translateY(0)
    }
    20% {
      transform: translateY(calc(-0.4*$font-size))
    }
  }
}
@mixin disappearanceAnimation() {
  animation-delay: 6s;
  animation: disappearance 4s linear infinite;
  @keyframes disappearance {
    50% {
      border-image: linear-gradient(120deg, rgba(39, 167, 225, 0) 0%, rgba(0, 253, 254, 0) 100%) 1 / 1 / 1;
    }
    100% {
      border-image: linear-gradient(120deg, rgba(39, 167, 225, 1) 0%, rgba(0, 253, 254, 1) 100%) 1 / 1 / 1;
    }
  }
}
//authComponents
@mixin authBorder {
  border: 4px solid color.$borderAuthColor;
  border-radius: 13px;
}
@mixin authLink {
  padding: 5px;
  font-weight: bolder;
}

@mixin authAnimationWrapper {
  top: 0;
  left: 0;
  z-index: -1000;
  width: 100%;
  height: 100%;
  position: absolute;
  overflow: hidden;
}

@mixin authAnimationCircle($nth-childElements) {
  @for $i from 1 to length($nth-childElements)+1 {
    &:nth-child(#{$i}){
      left: list.nth(list.nth($nth-childElements, $i), 1);
      width: list.nth(list.nth($nth-childElements, $i), 2);
      height: list.nth(list.nth($nth-childElements, $i), 2);
      animation-delay: list.nth(list.nth($nth-childElements, $i), 3);
      animation-duration: list.nth(list.nth($nth-childElements, $i), 4);
    }
  }
}
@mixin underlineText($color) {
  border-bottom: 3px solid;
  border-image: linear-gradient($color) 1 / 1 / 1;
}